const createConfig=(method,params)=>({method:method,headers:{accept:"application/json","content-type":"application/json"},body:JSON.stringify(params)});class Component{constructor(){this.state={}}emit(event,data){window.dispatchEvent(new CustomEvent(event,{data:data}))}getState(key){return this.state[key]}on(event,fn){window.addEventListener(event,e=>{fn(e.data)})}setState(key,val){this.state[key]=val}}class Model extends Component{constructor(){super(),this.on("Status",async params=>{let config=createConfig("POST",params);fetch("/status",config).then(response=>response.json()).then(data=>{this.emit("Status done",data)}).catch(err=>{this.emit("Status error",err)})})}}class ViewModel extends Component{constructor(){super(),this.on("Status done",data=>{this.setState("Status result",data)})}Status(data){this.emit("Status",data)}}class View extends Component{constructor(viewModel){super(),this.viewModel=viewModel,this.on("Status done",data=>{this.render()}),this.on("Status error",err=>{this.render()});let self=this;document.querySelector("#content").addEventListener("click",evt=>{evt.preventDefault(),self.viewModel.Status()}),this.render()}render(){let obj=this.viewModel.getState("Status result");void 0===obj&&(obj={text:"default here"}),document.querySelector("#content").innerHTML="main: "+obj.text}}const model=new Model,viewModel=new ViewModel,view=new View(viewModel);